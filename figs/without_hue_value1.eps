%!PS-Adobe-2.0
%%Creator: dvips(k) 2021.1 (TeX Live 2021/W32TeX)  Copyright 2021 Radical Eye Software
%%Title: 0751212eddd773f45a13d2d97e6340bf.dvi
%%CreationDate: Fri Apr 21 03:46:17 2023
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 406 313
%%DocumentFonts: NimbusRomNo9L-Regu StandardSymL
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -q -R0 -o
%+ C:\Users\syjintw\AppData\Local\Temp\tmprfywy9m9\tmp.ps
%+ C:\Users\syjintw\.matplotlib\tex.cache\0751212eddd773f45a13d2d97e6340bf.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2023.04.21:1146
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: psfrag.pro 0 0
%%
%% This is file `psfrag.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% psfrag.dtx  (with options: `filepro')
%% 
%% Copyright (c) 1996 Craig Barratt, Michael C. Grant, and David Carlisle.
%% All rights reserved.
%% 
%% This file is part of the PSfrag package.
%% 
userdict begin
/PSfragLib 90 dict def
/PSfragDict 6 dict def
/PSfrag { PSfragLib begin load exec end } bind def
end
PSfragLib begin
/RO /readonly      load def
/CP /currentpoint  load def
/CM /currentmatrix load def
/B { bind RO def } bind def
/X { exch def } B
/MD { { X } forall } B
/OE { end exec PSfragLib begin } B
/S false def
/tstr 8 string def
/islev2 { languagelevel } stopped { false } { 2 ge } ifelse def
[ /sM /tM /srcM /dstM /dM /idM /srcFM /dstFM ] { matrix def } forall
sM currentmatrix RO pop
dM defaultmatrix RO idM invertmatrix RO pop
srcFM identmatrix pop
/Hide { gsave { CP } stopped not newpath clip { moveto } if } B
/Unhide { { CP } stopped not grestore { moveto } if } B
/setrepl islev2 {{ /glob currentglobal def true setglobal array astore
                   globaldict exch /PSfrags exch put glob setglobal }}
                {{ array astore /PSfrags X }} ifelse B
/getrepl islev2 {{ globaldict /PSfrags get aload length }}
                {{ PSfrags aload length }} ifelse B
/convert {
   /src X src length string
   /c 0 def src length {
      dup c src c get dup 32 lt { pop 32 } if put /c c 1 add def
   } repeat
} B
/Begin {
    /saver save def
    srcFM exch 3 exch put
    0 ne /debugMode X 0 setrepl
    dup /S exch dict def { S 3 1 roll exch convert exch put } repeat
    srcM CM dup invertmatrix pop
    mark { currentdict { end } stopped { pop exit } if } loop
    PSfragDict counttomark { begin } repeat pop
} B
/End {
    mark { currentdict end dup PSfragDict eq { pop exit } if } loop
    counttomark { begin } repeat pop
    getrepl saver restore
    7 idiv dup /S exch dict def {
        6 array astore /mtrx X tstr cvs /K X
        S K [ S K known { S K get aload pop } if mtrx ] put
    } repeat
} B
/Place {
    tstr cvs /K X
    S K known {
        bind /proc X tM CM pop
        CP /cY X /cX X
        0 0 transform idtransform neg /aY X neg /aX X
        S K get dup length /maxiter X
        /iter 1 def {
            iter maxiter ne { /saver save def } if
            tM setmatrix aX aY translate
            [ exch aload pop idtransform ] concat
            cX neg cY neg translate cX cY moveto
            /proc load OE
            iter maxiter ne { saver restore /iter iter 1 add def } if
        } forall
        /noXY { CP /cY X /cX X } stopped def
        tM setmatrix noXY { newpath } { cX cY moveto } ifelse
    } {
        Hide OE Unhide
    } ifelse
} B
/normalize {
    2 index dup mul 2 index dup mul add sqrt div
    dup 4 -1 roll exch mul 3 1 roll mul
} B
/replace {
    aload pop MD
    CP /bY X /lX X gsave sM setmatrix
    str stringwidth abs exch abs add dup 0 eq
        { pop } { 360 exch div dup scale } ifelse
    lX neg bY neg translate newpath lX bY moveto
    str { /ch X ( ) dup 0 ch put false charpath ch Kproc } forall
    flattenpath pathbbox [ /uY /uX /lY /lX ] MD
    CP grestore moveto
    currentfont /FontMatrix get dstFM copy dup
    0 get 0 lt { uX lX /uX X /lX X } if
    3 get 0 lt { uY lY /uY X /lY X } if
    /cX uX lX add 0.5 mul def
    /cY uY lY add 0.5 mul def
    debugMode { gsave 0 setgray 1 setlinewidth
        lX lY moveto lX uY lineto uX uY lineto uX lY lineto closepath
        lX bY moveto uX bY lineto lX cY moveto uX cY lineto
        cX lY moveto cX uY lineto stroke
    grestore } if
    dstFM dup invertmatrix dstM CM srcM
    2 { dstM concatmatrix } repeat pop
    getrepl /temp X
        S str convert get {
            aload pop [ /rot /scl /loc /K ] MD
            /aX cX def /aY cY def
            loc {
                dup 66  eq { /aY bY def } { % B
                dup 98  eq { /aY lY def } { % b
                dup 108 eq { /aX lX def } { % l
                dup 114 eq { /aX uX def } { % r
                dup 116 eq { /aY uY def }   % t
                if } ifelse } ifelse } ifelse } ifelse pop
            } forall
            K srcFM rot tM rotate dstM
            2 { tM concatmatrix } repeat aload pop pop pop
            2 { scl normalize 4 2 roll } repeat
            aX aY transform
            /temp temp 7 add def
        } forall
    temp setrepl
} B
/Rif {
    S 3 index convert known { pop replace } { exch pop OE } ifelse
} B
/XA { bind [ /Kproc /str } B /XC { ] 2 array astore def } B
/xs   { pop } XA XC
/xks  { /kern load OE } XA /kern XC
/xas  { pop ax ay rmoveto } XA /ay /ax XC
/xws  { c eq { cx cy rmoveto } if } XA /c /cy /cx XC
/xaws { ax ay rmoveto c eq { cx cy rmoveto } if }
    XA /ay /ax /c /cy /cx XC
/raws { xaws { awidthshow } Rif } B
/rws  { xws { widthshow } Rif } B
/rks  { xks { kshow } Rif } B
/ras  { xas { ashow } Rif } B
/rs   { xs { show } Rif } B
/rrs { getrepl dup 2 add -1 roll //restore exec setrepl } B
PSfragDict begin
islev2 not { /restore { /rrs PSfrag } B } if
/show       { /rs   PSfrag } B
/kshow      { /rks  PSfrag } B
/ashow      { /ras  PSfrag } B
/widthshow  { /rws  PSfrag } B
/awidthshow { /raws PSfrag } B
end PSfragDict RO pop
end

%%EndProcSet
%%BeginProcSet: l3backend-dvips.pro 0 0
%%
%% This is file `l3backend-dvips.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% l3backend-header.dtx  (with options: `header,dvips')
%% 
%% Copyright (C) 2019-2022 The LaTeX Project
%% 
%% It may be distributed and/or modified under the conditions of
%% the LaTeX Project Public License (LPPL), either version 1.3c of
%% this license or (at your option) any later version.  The latest
%% version of this license is in the file:
%% 
%%    https://www.latex-project.org/lppl.txt
%% 
%% This file is part of the "l3backend bundle" (The Work in LPPL)
%% and all files in that bundle must be distributed together.
%% 
%% File: l3backend-header.dtx
/color.sc { } def
TeXDict begin
/TeXcolorseparation { setcolor } def
end
true setglobal
/pdf.globaldict 4 dict def
false setglobal
/pdf.cvs { 65534 string cvs } def
/pdf.dvi.pt { 72.27 mul Resolution div } def
/pdf.pt.dvi { 72.27 div Resolution mul } def
/pdf.rect.ht { dup 1 get neg exch 3 get add } def
/pdf.linkmargin { 1 pdf.pt.dvi } def
/pdf.linkdp.pad { 0 } def
/pdf.linkht.pad { 0 } def
/pdf.rect
  { /Rect [ pdf.llx pdf.lly pdf.urx pdf.ury ] } def
/pdf.save.ll
  {
    currentpoint
    /pdf.lly exch def
    /pdf.llx exch def
  }
    def
/pdf.save.ur
  {
    currentpoint
    /pdf.ury exch def
    /pdf.urx exch def
  }
    def
/pdf.save.linkll
  {
    currentpoint
    pdf.linkmargin add
    pdf.linkdp.pad add
    /pdf.lly exch def
    pdf.linkmargin sub
    /pdf.llx exch def
  }
    def
/pdf.save.linkur
  {
    currentpoint
    pdf.linkmargin sub
    pdf.linkht.pad sub
    /pdf.ury exch def
    pdf.linkmargin add
    /pdf.urx exch def
  }
    def
/pdf.dest.anchor
  {
    currentpoint exch
    pdf.dvi.pt 72 add
    /pdf.dest.x exch def
    pdf.dvi.pt
    vsize 72 sub exch sub
    /pdf.dest.y exch def
  }
    def
/pdf.dest.point
  { pdf.dest.x pdf.dest.y } def
/pdf.dest2device
  {
    /pdf.dest.y exch def
    /pdf.dest.x exch def
    matrix currentmatrix
    matrix defaultmatrix
    matrix invertmatrix
    matrix concatmatrix
    cvx exec
    /pdf.dev.y exch def
    /pdf.dev.x exch def
    /pdf.tmpd exch def
    /pdf.tmpc exch def
    /pdf.tmpb exch def
    /pdf.tmpa exch def
    pdf.dest.x pdf.tmpa mul
      pdf.dest.y pdf.tmpc mul add
      pdf.dev.x add
    pdf.dest.x pdf.tmpb mul
     pdf.dest.y pdf.tmpd mul add
     pdf.dev.y add
  }
    def
/pdf.bordertracking false def
/pdf.bordertracking.begin
  {
    SDict /pdf.bordertracking true put
    SDict /pdf.leftboundary undef
    SDict /pdf.rightboundary undef
    /a where
      {
        /a
          {
            currentpoint pop
            SDict /pdf.rightboundary known dup
              {
                SDict /pdf.rightboundary get 2 index lt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.rightboundary exch put }
            ifelse
            moveto
            currentpoint pop
            SDict /pdf.leftboundary known dup
              {
                SDict /pdf.leftboundary get 2 index gt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.leftboundary exch put }
            ifelse
          }
        put
      }
    if
  }
    def
/pdf.bordertracking.end
  {
    /a where { /a { moveto } put } if
    /x where { /x { 0 exch rmoveto } put } if
    SDict /pdf.leftboundary known
      { pdf.outerbox 0 pdf.leftboundary put }
    if
    SDict /pdf.rightboundary known
      { pdf.outerbox 2 pdf.rightboundary put }
    if
    SDict /pdf.bordertracking false put
  }
    def
  /pdf.bordertracking.endpage
{
  pdf.bordertracking
    {
      pdf.bordertracking.end
      true setglobal
      pdf.globaldict
        /pdf.brokenlink.rect [ pdf.outerbox aload pop ] put
      pdf.globaldict
        /pdf.brokenlink.skip pdf.baselineskip put
      pdf.globaldict
        /pdf.brokenlink.dict
          pdf.link.dict pdf.cvs put
      false setglobal
      mark pdf.link.dict cvx exec /Rect
        [
          pdf.llx
          pdf.lly
          pdf.outerbox 2 get pdf.linkmargin add
          currentpoint exch pop
          pdf.outerbox pdf.rect.ht sub pdf.linkmargin sub
        ]
      /ANN pdf.pdfmark
    }
  if
}
  def
/pdf.bordertracking.continue
  {
    /pdf.link.dict pdf.globaldict
      /pdf.brokenlink.dict get def
    /pdf.outerbox pdf.globaldict
      /pdf.brokenlink.rect get def
    /pdf.baselineskip pdf.globaldict
      /pdf.brokenlink.skip get def
    pdf.globaldict dup dup
    /pdf.brokenlink.dict undef
    /pdf.brokenlink.skip undef
    /pdf.brokenlink.rect undef
    currentpoint
    /pdf.originy exch def
    /pdf.originx exch def
    /a where
      {
        /a
          {
            moveto
            SDict
            begin
            currentpoint pdf.originy ne exch
              pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
    /x where
      {
        /x
          {
            0 exch rmoveto
            SDict
            begin
            currentpoint
            pdf.originy ne exch pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
  }
    def
/pdf.breaklink
  {
    pop
    counttomark 2 mod 0 eq
      {
        counttomark /pdf.count exch def
          {
           pdf.count 0 eq { exit } if
           counttomark 2 roll
           1 index /Rect eq
             {
               dup 4 array copy
               dup dup
                 1 get
                 pdf.outerbox pdf.rect.ht
                 pdf.linkmargin 2 mul add sub
                 3 exch put
               dup
                 pdf.outerbox 2 get
                 pdf.linkmargin add
                 2 exch put
               dup dup
                 3 get
                 pdf.outerbox pdf.rect.ht
                 pdf.linkmargin 2 mul add add
                 1 exch put
               /pdf.currentrect exch  def
               pdf.breaklink.write
                 {
                   pdf.currentrect
                   dup
                     pdf.outerbox 0 get
                     pdf.linkmargin sub
                     0 exch put
                   dup
                     pdf.outerbox 2 get
                     pdf.linkmargin add
                     2 exch put
                   dup dup
                     1 get
                     pdf.baselineskip add
                     1 exch put
                   dup dup
                     3 get
                     pdf.baselineskip add
                     3 exch put
                   /pdf.currentrect exch def
                   pdf.breaklink.write
                  }
                1 index 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                2 index 1 get sub
                pdf.baselineskip div round cvi 1 sub
                exch
              repeat
              pdf.currentrect
              dup
                pdf.outerbox 0 get
                pdf.linkmargin sub
                0 exch put
              dup dup
                1 get
                pdf.baselineskip add
                1 exch put
              dup dup
                3 get
                pdf.baselineskip add
                3 exch put
              dup 2 index 2 get  2 exch put
              /pdf.currentrect exch def
              pdf.breaklink.write
              SDict /pdf.pdfmark.good false put
              exit
            }
            { pdf.count 2 sub /pdf.count exch def }
          ifelse
        }
      loop
    }
  if
  /ANN
}
  def
/pdf.breaklink.write
  {
    counttomark 1 sub
    index /_objdef eq
      {
        counttomark -2 roll
        dup wcheck
          {
            readonly
            counttomark 2 roll
          }
          { pop pop }
        ifelse
      }
    if
    counttomark 1 add copy
    pop pdf.currentrect
    /ANN pdfmark
  }
    def
/pdf.pdfmark
  {
    SDict /pdf.pdfmark.good true put
    dup /ANN eq
      {
        pdf.pdfmark.store
        pdf.pdfmark.dict
          begin
            Subtype /Link eq
            currentdict /Rect known and
            SDict /pdf.outerbox known and
            SDict /pdf.baselineskip known and
              {
                Rect 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                Rect 1 get sub
                pdf.baselineskip div round cvi 0 gt
                  { pdf.breaklink }
                if
              }
            if
          end
        SDict /pdf.outerbox undef
        SDict /pdf.baselineskip undef
        currentdict /pdf.pdfmark.dict undef
      }
    if
    pdf.pdfmark.good
      { pdfmark }
      { cleartomark }
    ifelse
  }
    def
/pdf.pdfmark.store
  {
    /pdf.pdfmark.dict 65534 dict def
    counttomark 1 add copy
    pop
      {
        dup mark eq
          {
            pop
            exit
          }
          {
            pdf.pdfmark.dict
            begin def end
          }
        ifelse
      }
    loop
}
  def
%% 
%%
%% End of file `l3backend-dvips.pro'.

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: NimbusRomNo9L-Regu
%!PS-AdobeFont-1.0: NimbusRomNo9L-Regu 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Roman No9 L Regular) readonly def
/FamilyName (Nimbus Roman No9 L) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /NimbusRomNo9L-Regu def
/PaintType 0 def
/WMode 0 def
/FontBBox {-168 -281 1000 924} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8E152A40E590419249F2E4
C36159F8E54B532468E36965A38646781AB0B7F6A3E851FD10CAA49ADFC1E546
2FD2EC6150DC6E19523050F6148348A561AD8D2E2721EFF8A570CB33460A745B
926C889304C09753C2D78FB0CA95DC6DE5B8C524752C83601E7E9F73DF660674
F05AD83A166DA9BE89F22FEABD4B2665960F6FB5BC32928E1230C212E5D69CEE
0B3311A1738A11747AE263106916D8E95F25B25B4BC6AFB03B79ABB95DDA518B
41A49458111D2A1433C043627EF9460D324FFE22935F4F6DA88B8B91AE95B34E
08408A34EC8EAC3F65B6AE3E3E2524867EE9D29068F81E4372F4470BEEB4D6BE
EE4DF956BECC0CB77F8490117B22B2FB75C938ED0A5E208D88BC38B2AB8B9CFB
F1D53084B6F43DF336481ECA0AA2D5317BC83FC0E1D4DB01D0B7707EEF217E94
A7F985102DED27D8E8B009F7EF6DB91B91E78BFAE7BD688E10B3DC9AC77CDEE8
47AA4DC8EC78241E593D26EC7A60696151A2AE5325D736E99E01BDCBDE69579F
92EEEC224B6757EEDC64A75455BB665DF42A0E4CE7B99BF3E7D66F8FFC8C13F9
D7A1FF7A9D5FF7AC43396779F11C9B008C33A2043D48B61B88B03104B1425F09
675B559CA4302C001EE80D2B739CC0FD1023BF4F1FF9C01E892E59CCA7C26011
B8E0B6D29CC29FC72792FDA5E7D5D88EF98F9DBA960C96534C399C54865EAB86
0FA2E0D6C7C44B553EAC1574D55E7970744D4792FFFBDCE6FB4365BDBC2965BB
2E9EDAD9E0EBF0B620DB415AD98297F5AE83D9C710436657E74D26E83957C745
89834337035A7501803947F6880B70E56A3A404C62D57B849D28804CBE0F5884
435A0E12DCC9BA414ABB732BFBAE237001F557DEA5E972BA0838A3C7C9EB75AA
4A050DA0A529BDFFBF9011C360564FD17A02C18860AF6B86EFD4E2C125686C9A
5E114E95C71FC89A5DE9C589BFE5AC0480CFF716345265D2435EDAE67CFC4801
5BC08E7A48D683ACDB91E05F469C0C8919D73A5D07A1CCB173E30E76680ACB09
02A40A3E11916198BD69F1A26E88330F50692D0D5917E99E7A01B327413E24AA
E98EA484E45897E6AE4D6997B6E8BBF61C9406E916D56985CB2BD297E8ACFC6E
CF2D2281AD84696B7C6CB584BD85CC20BA14ADD3BC3E25DB91124C0ACF22E902
3CFBF04CC40DE331991E9075D22AB5EE0E849B340050E6C417C664A782D05549
DB2EF572F193B1C12B4635C2B358747046DE585DEE930F8B6DC1CD18BC6A0E21
355FA63BF735DE357816B8A4120A6335817ABD0A0BCC4B6970B2C343CA865AC1
D5E0E6E79F86DFBA8176C5EF654243DDF5DCBACC2CB86200E811E0CA2E52A0EB
3920745092804554D23C10F87A34B08DEA1708E447E0C55794077222B339700C
A504A8DCE78D2BDC07CED8F417541FB6E7332443F0FE0AB0E8775B76CC3B68A5
D173DB74E88971C070FBFBFC3330074F247AD44BF4C4707698B53491C9E0E153
3A71AAB76AC6E3E4EFC38392343E3904BDBDB38FDA1BB4AA5897848E7033DAB6
D2D40D7954EB8B0A44BED68ADBDEF33B74E344E2A6EB357AEDB9BEBCA653C9A4
6FC558F650999A49BE3E567B225E7359245BD5AA1A57DC0E956ADC19E19CA5DF
2F8CDDAB6B9C8810A52BC5F9674D286FD002DFA5BB3132AB203D050264171EB8
57E3777A3403B563AA12FD215872715967549F665E4D31FA89D07F9F7B71A984
195B37D993CCC2992E4434D1B356BD56EDF5FA021AD6731FC67E56D594B8DC36
81D1762E66BB265F6FAAFF5186A7AB03ECCC79A923BBBD362B788F5C9DD7735A
48BE728AAB48D8D37D238A935D5742BE83214E06770BA127BD4B9E4F5EC52314
B25837FD118062685D20EAB378DC015F3AC6510DCCC4687B7EC4B6153D8E6744
3C33B97B28C87C6082D9E03E2570951103F75E168059DCDD7D5FFECB83EA16BF
C72CAFAED1EB8267138292F2F3BD650E492ECA67D539F5618E25570478C654F9
3676CD7156CC449C1204FFDA4D2FC79A2A452E9653F254FD477654C630413E7F
D3303C8A36A39A5387B5199B610EB41E92E20907002DD4E789818F8474ACB92E
A6631F67EF772DC34C669C1C2D2EF81DEB5AEEAF64B69C923EC1AE1B9CC17DB0
AC5C044DA560D6B590413A3FEEA25ADE53F3F2CA32CCA87196D8FE94B25BF7CE
9FDF6F1D5E59461A5D82BA1C36E1D82C89F2CBCFDE3BD31AA739AD1CE5455850
D4AA4BD78632A33EDFE2655DF3782E44566898041893C1C42381CBE7658AE833
74D4C2D34FC7886AC7504F9D0343E6401392AE906815521794D7852453DE901E
C95CD81B317F0B1BB0722BB87756407238C1773B9AD2B42B445BA8F0C8CDCA1B
3CA5F591E1947F3ED10411063A18DE1E895810865571C082FE435A27CC73555A
F26D06A3F7FC9001DF22EC0CC46D04779B580956F81F3E8D1F7B13351DC4927C
B925D3BBF9BDA3A6773F8D9A64713AA2B67ADE09E2FF91EE85618497C8889F77
AA93B76B5590FE59E56766FAD6D49E5153CECEA72C54CAEE63989233EB1AB6F8
0C0D69B5F478EA5331EA1C2E359AB771A91B79E2023943AD70C94C98E1D5D4DD
7C98D55433F837BD7AABE49765314832A6764133D36421C3D41DF23FEF09F708
B81B2D8832D2C509F8BF7159919224EEA75AA1DBB905054DE3155379A26544D9
E03E132860F7575247606E93CBC9423D966DEDCFCBD34195841E25BB7FA7EF97
DD7ACD4F4BF670E3642C384EBE3FC198A13102322862DDC3C572A4466C91738D
5B66B191A7ABCDF16C70A757DEE0370280ED09237344E524E76F5AA453626F8F
FE3B37172A599F1F4DFA8A4A7B832021067D4672B8E1842691FD53DDCB2C8CF6
D64AF3D5A5A24365408CE0AF897A693350FF86477BC34710A3487E75E22AC082
9ABF2862B4DED2426FE52998D2CBC675B999AA5220ACCD097A24301D84308127
B9E4FA483C21124BB90C81D4A5053085546318E16437828CC508784173F073EE
0AEAD1BABFEDE822A5E2F09CB70E1E514E50B07F492C1C4F41B8DDA112B42DA5
3D1A0160817288A83DC3CC63DE40C1316698F13C8343C852C84769D1E4176F64
EF3C2D266ED2B909E42F97AD9F6A941E5C554000A47EB5D9E377BBC162AD9B78
B7A7808A55CB323A05ECB3A4DD40E0A0A26F904E29F8C71C37CA3E7472AABFA1
6C8AC88C292CD50F865C4AF4C0E9655171298F07DF376DE565D1150268746AC3
8BAD25DBCE0ABE02B225FF51C3CAD527A8BF9376780164C5A1F030379CC9E763
CF518CF9E2DD473997BD2A39A813FC4891B49EF70E941B283BC9E295ADF898B6
A6D22A71F09AA8844FC29766224D83461F05B08B6A92A6BA6989DDE919FDB952
BF61E0B4102EB33AE0F8CB8DBCADEA1DBE018A4FF203BD2D3299DCFA145D2D0A
8DCDD32D50196DB52A4889F8BB386B540763D5DD6D8A6BFAF91ECC5FC5EBEEE1
ABBC67C684370B17DA88DD185A4373DC849D6549F0554307B039DFC7306410B7
BF9242ED78D9F08431920D3D66094BCF990D78D279557A3DABE75C0616D2AB62
148F9B8BA2C8F8A84AD8D2C22CDC8C629A910811E0353DF8BA19B313A27AD632
3009DC44DA90B76A05860EF64EE00C708F24FC42859E4D18B40BF75688F3ED38
328022EA6503B560C49D125450C406CB538A784024E84976BAE7CC71F8F7DE2E
D394AFBF5B3B2EAEB83C101C3B18182CA876162E87AE32D5F435F3FF0B01F658
C0AB38E1D71D781BD8282FD2969975CDB303737E0FD61541AC1F598A5843D1CA
D6C5A53FB3BDB005D9CAE8FACDF70F4ECA4EC27770554DB296C79D6604875E29
58A6FE193719A5BFEF3EC9C9E9CE600B868A5330746DDE16DCA52D49E4389002
2B9245B023385A6B9F7CBE240E9B8AE837B7DDE8993804A527FA18E5C7777836
8F7D57187F0828675A52382D41DE6CD9FB5228BA019234777EDE774B4792EF5E
23B4E9DF801AC252D737FAB69E4DE0A3A861D291B2304F415B8C958B34653713
D7716F99D553B866B45F1F0902449EE0F9445B4C806477D1E718EFF432ABF363
4C8A3E2FE45F46A27D424A6C77D123D7B13FA066271421A14D8C1094CBAB96EE
402BDF0AEC12251A08C6BBF2F9317FAD69CCB5C209964A2CD55B142A535DD496
AC6209BFD5F4D7B03BB496412B3CE8583E3FE75D6BA9EA103472F53EF24A5911
D6CB90BD0BD93F0450ECC9878F6DCD4869199A59DEFADEAC6303D71187636594
A3954427476E75C465A789D99B76471EDD5C149A7765C03CD3F3297CBD04CE59
9E4950F305D2C33B2630E830EE103C46AB0233DEB688763337BF94CEF887860B
822769C2A0BDC83A1912AD51BFB07B13E656EA730E5C21A5D1129756ED65A11F
FCC01E3C18BD8A08EBE6D02373C01C9167994D589C2C98C192E979852EAEC1D6
21492AE6D4412493E0CDB07BEF9890EF9F0C943861FEAA6E2EE8957F58F65493
04F27174A5303B534F3BBA4DD09492576A8AE770788A100C3CF0C05C0E30F0B3
C40E640856403246955E77074BFF0EAD54D62A75A2E230F9A250F75CC7893BD3
13B8AEDF306CCF2727CAC4A13B4ACA339E375F34C96BAB9E9909EE52CFD9DDA5
6E43B43EE27728E640B561E13498F900A467910D503B5602433467057D4131BC
812153E8B87D7FE4132B67A274AAAD9864B8ABDC8AC9681770A209765C230AAF
2B56CEEFAFD528501E83A026E6DB239CA356FC6657ADB9DAAA1743F76CA180BB
C2A9C7DF8A5CD3356ACD17FBAC4EA35900BF62D63A88BA85BC7561E952DBC77E
1E77A6F7110B0BC7D0CF56FF22BEEA6C0C70A690DCA537B6945DCAE8B48AB575
6FCA51C1E056D7BD6E5E186ACBB9EDD74632BF6B5B93EF12B9365E8235B2F261
7402C249686F7A74D985BEC536E96633BEA4CBC1B060F4B220D2CF9F5F9F1FFE
BC01C83CBA3F6CB29E1EF04C3554FACD12B5C689DBE39D73BA8C9C093FF36C00
8A030962CF1989F1179C80ED82109EF203E8E6F42E7897A287935F0E7AF6D49C
B9DC59427AA75801EF639AFF6A2A4078CCA035D62FA290C68B1AE621530773DC
ADB9310742DC47A084620AFE85289172711778FD9C956413FCC65C406B8A7DA9
2EB22F6DEC316C58986624D60CABFC4713C309364EC9D7BF73AB458D592D16EB
6BF1B3664D0C03876B0FD46A53F8A7DCC41893478EEDACD50F2C438183013354
428FEF16446C0D86A6F09F17A351805338141E9AB69F495A1311A5943A89F3F3
7982AE73311F5EF4154E88BCF899691D35FDF7B2A3B17CEE20179BA1058FD26F
AC204153788A60AA13D8586FB5EF8E4D0A27D4DE5AB3F43C2A296F3EC6C3549A
23967A15088039F7E02BA208ECB2101751D336E50FEE952FBE3C3FDD4802131A
63244C587D206C8C328F9A5BE13EB210B943B65F054B787F7DFEA284EF5432A9
65E7CAF2466B3CF071E8C42A88971376A9B7E7DB1DE0912F584CECEC882E23B0
5A71F5B9172FEA4000147478E05EEDEBF6AA0318E229C005AB8494E0A5F53018
55FA71AAC93072FA2B79504656658C91FBC7046B8EC63993638058AFEDC3B563
A4F737B9D012B8BC5C00D9503DD3A3DC42C9107CA0BAC50A027BB01514BD978F
1EC068A99627ADD833BCC4FC1E1CA352F141B9094B83682C351FF9A5635B5351
46BE6FAABB489BF4670EB674EEB14A276935114F1DA253C4E2C6915C930F4ECE
D3448BF453FCD9A4F194FA648F9FC0971734B3D7EA86B95B90559A5E2D642080
61D6521E5171333BF9CB38C4494FC7AC2B573C3792E45CEE23C52AA38B0B05AF
E3DC207C637F63A1F68C6D5A2C2369388CDBAE9FD2F19375D6E5BC2521E803FF
56AA45F1574B9863C93E01992AE7F8D0C563A05EBDFF06ED11E5CC5E819EE059
1709662A1B521B539878818276E4A5A52AD241B2DBC25014AA98D3D0A708EEFB
81A2C5F15491FEEC069B0F155E56DB3DBA9C43AB54200A68082FF9AAB7FA82E8
E15F366CE98A40838258D452E73137413052733BB66AB7EC5195DB43B2E77689
C96E5188F04E1AE1BE6D51D46599D8C2DDFE94A2105FC2D898DF5FA29B58F253
A769F6124346CDF97050E356F2216D58A02FE249930010080C12CC74EB8C5288
E168E18C8694A3A4A65E9E9226DE954C56B5DFBE1A48ECB347A8BE46825C77D4
28B279337804111095F4C1FF42CE221D0499E9B00E053C705D09D930487A35E0
B370EAD2FFB42A421067BE4CC7751FDF72191BEB021002ECD43C1221FF979F07
B9C32DB79F78DF1EE4DD81C2A33A8CA1E987A10D720E0F794E994F16F039CC9F
5BF19F36F55FA85B8F0097DEE9BD4A55ACC1FF84087D95BE7A2FC2AA446A89DC
D27226822D3780A6619960C0A619B8A60AEE8382D921A46D818404552BCF4D97
3B036EA5FF44FC25DBE8A7DBD18A8B9E8BA7709A2E36051D710DAFB9333E14C3
31C9742197971297D537A847D6F72E2CF18575EDDDFEC4E1B245534431C106AE
612BBF80F4BD0A76B801C53369EF2AEF192778028A63F1D238B7EDA1CA4AD48F
C4CBD1708F474E262B1BA84DF0EBBC7856F6656E871470441729DE4DB2F27D92
348401D398A08CBF945EFD9897622BD333B3E479C9A5DB0D6336507F54773632
765942A48C7B0D3A8C1EFDCAD69947822E4D77934370A28832A78921424C999A
2901E259FD6303695AFA7F66D26836509C8ABCE19AF3D4EB27ECFD04E3CCCD3E
81131BA2B243C8E3DF12E0EA444924FBC760A5E32C9378F5AC6D9D184B027F08
FB8C4E8528696BDD16CAFDF9E257D3B15FC9E0E8FC5424C0497B0DC0233BBE05
37185C42AA4314B9EF98E60B1058C0E08F863EDE31E97ADF14607D47D7D0B615
41A7EACEC4FFE35175DADF87655FEC0FD704CA3C6FB910449FE5BA01366F1A04
F175759D8E07F8D879399599A4B0CCA4F64914F35C42116D2D1B3E7B4E1D2E45
013EC5982CBDC8708005F917F5B5C62AA646C4311D3FA82AFCC89954956D4CCA
BF9BABF7B1BAA628E029C4C26ED220277CEA94728ACCDF5607C9DAF0B594A3EB
C66689C75302A91D45FB34BBDF1AB3A40C84012AC5C438870727AAD5196BAD55
BCC200B414EABC187852132866F89A4E094B267CB1BB4C611B3958059E82A863
83B385521EC0EA952ED879414943CA8AA6C934ED48D351F9558FD8D9D5B7478A
9A196FB1265991CF32B7365427AE51FFF051896FB41AE222DF8A67CD805EC551
26E5911892AD2AB3528E7F851C7566BA81164918688A7AAD4A72E3D003CD56EC
5D3671C94E58A16329452EC6EBA90AE3391FA2AADD471227F3F8A5335C37216F
25C8040C443B7BC41DFF2A7A14D3555F6B33FB0F545BF82564FC859D905B7173
CDE6DD95F3EB5AB656A4BE75270F16B27F212FEF8FB4E9913BC51369D5BF5B7A
AC779B31610B918ACBE641F7FAD256A96FD7154DDB0A8ED5F222ABDF7DC3B76E
EDA19BFDB66E115CF828ACB0730F466BB0B8BC0F5DEDC721334FE879DB066BE1
134A6DBE416A8DFA58FD6C38846F3E016215FE10FCA449E869B76427D3F54EC4
423B52DC378E114FF09CFAB6A8F5AA3BE8722A82F67E06DA7B964E2D7949957B
4EDBEC71EB60798D77004FD73AA4F5E6C150082BF0BED5CF652F1E602E7F27C9
BCD01337232B4F684D275FEF10E1C8DD91E5EEC0D1339E4334BEF890240C6062
76B34A7453D932AE04BA89F041E2F56091E9837DBCBF1E55CDC265DA9BE53A8B
F58B391D65DCBEAA2DA6B8DEEC35AF2C3E12674A53B3A551767B93740BDA38E7
55DDF36BB87943CEB976A201B187CA6D8125514B17A8D6CFD6C2D91579458F91
CD3F83B8D2255F31B197B5384E99EA5751CDC00D138CD3F1FC196B91F356FA41
E4806BEC725B97DC2C7F88DBA52836CD9901AFF9F2A46A8FFADFA04770549690
2A0A3EDB6D1C035A68FAB8FC621684EDD44CCB193B1B96B85098CDA76853C9B5
914FC368A1BDC9A16EFE460B957D4B19521978E0F5B1AA2CBF11715875183560
5815E0FFF7BD1066C04805581B4DE31C200A968DFC160B31685F0D5E3CAF5CA6
2FA14A24137F2DA6C2155C198FFA1D7BC8BDF10C7000387DF4075CC16A453D31
FEE18596659CF38AD3A4364D347708C8D933CDDB280F0557D09B702E410778E0
8C9AE2589E1CA1D9813A4CBAE6C3617724D6112DB53E7B56D103AD811F18AD43
0F3A94128B842C807296A4241DC57D97854902429140449E328C37F0AD379B48
4EAF8AA563916DB5E55245DD7F6A35DBDEEA47CF7D846324C9B8B9532D0B25B6
18AF651A72F4C2B547B61BD28D6A05FC657E2B66093F425FE96CAD2E45FEAE70
D9D06389751EE5B2F62E1092CAE5AF1E2B3AC803DACD0699E07AB62734B6BFF9
75046D1E410B6CF948BDE98452E16161FC47C77DEC0D796635DB36EFF934657E
9B6D734A5F593653470A1AEB659C973D52B28D6CA92DDED5BE33EEE824203C20
5B7963E6EC917BC6FE271EE6C23FBF532ADEE1A40E1D817B4DB795BFBCC80F4E
FBE3D7E3776948F8D4BD2D4658524B0071B5582DB34872C321F5D6A82C3B0AF2
A3AF646140AFB2AAF466E041274DBD62E359A545D932EF69550EC066319191D8
B1E41B3BE2BD081CFB9BE385EE4965302A8B4AD3F6880ADF3C06F87F30465B40
B6027C7855F77F9872FFEF1A8B62C4D0251F21FF313C618BCFAA7BC90CD779F4
58E7BE99F8D8D67CE49B563FD8519326A4FC31C9828CF2AC80B73CE2768B0654
5FE267BF7990AF68DAC5B52DB3BD947789E40F9B74CCE1D5CD54A0B9310742DC
47A084620AFE85289172711778FD9A3B4B1BD30E3554F65A2BDBE89B6F6BB32B
219D9AD4677A3BF678DAE5837FF6A42C21893F4FA98854D55FC996CAFE7B1EB4
0C8A664FE68BFEDB98E14E3073ABF39EF526F37759B738C4550211BC4F480EE8
BCD0103D072882FBECCA7FE32B90D3209091D8931BC21C6F969288B1CAB2EAC5
42CEA71F649EB3C250BF72FA2087BAA7C0B2CCB14D6CDDB160BE6CC01F8063C5
60B3709D6973CE3C2DAB27AAB77FACDDD59C9C780BAF345F7E6EB57D05098DE8
2CBF5FD86BEE849BE3D5964966AF4E68F21A1A06D5F3D500D2AB0171C4832D6C
DBD8F1218C4D4CD7BEBA74BE5FF28DF38DC1ED74EB98C865B91A8DFAE56EFA33
5B27DB22FE23F4830EFED8699D14A239C6B7BA626FEE81B958A514BA3CB40E80
7C7AE626A9C1F70C7D6D2D4D97AF891E2B40631F352672580121EACEE26EF89A
3EB316216A40998F450ABC438D103130D761C060E962BA317613259109751643
457B8856E8353F5FE9F3A6AF060FF5C613FA87D9E91402325B622A4D465E0638
CB5373A23E65A944FE6B2095A72907BC55B6EB393D4C33D242A0F8F2F70AD5D1
8B0D1774E48FA863D92F0F3FA60911C921CB164D3E4DA74037035D2268C9C268
CD84F332FB505DB3A35DE963CEF8CFA34D66EEDD8AAAB636288DBB885C46C571
8498E0A8C3AAF39D98E241C7E9A7149C40D1DA8536AF51BD0187747CEDD0E10C
77B6A97267F4C63D4093BEA8A34B315CEE932B40A8B87A40B8CF5EAFC476AB03
1A8485DA7CB345F9EE10B25F7E24A18773D3C5190CC50D7A2ADB38EDB790CC44
476B2331E01F44EC9827715D8D755A09BA38A0C320169FF72AF97319F3EC1C73
89F3C9A5D9E476DA325EF015926D1AD5E8434335D76E0707C36ED5E5C2EC7E59
783CA09AA5A344F9EDCDECD6B5F6907657BCB470A3042A3655DB83C6EC9EDABF
DB1CAFF5FB8203CE3B25721168DC1C5B26FB482E06C093E9EBE22F3B9FD5B28A
B8931F1C947778DBE38063F9326C3710CF8A8136ADBDE0D75B0C7D1AA85FFCEC
61581A4B4CED1CC44BB69DD41DE505CB7933CF86E49AE70A9C4D00767155B366
129FE16EF667F6E51456835579E1BD8BC68D51BD2D7C7662AEE2D821734FB6CF
0E76FE8A6956C4E65B086DE174E0E3A6A9F90C7686542CC2D5F3EA87B9F28773
27643D015A442350EA70228E95BC50C6384F2885F22004BDCD1206243547DBB2
AC5B3F8E442492E7A89D2DF0A0241B69AFC6AAF2260DA199E7FDD93EBAE2D415
13B3EB2A33AACD01B877010C1E685F759A1F68A9127CF0F51CE7B744BED6D2A7
96973F8D37C19E153EC0014750C3EFA20150F9AF0A5BCC8DD9C7DD53434BFB0E
43E1DC9B130E3BF1663339741913F97EA43697A176C79A9CCF212CE76F32E61F
3DBA37A03546F1F8DC451C50C76BBEABC2818C68920E0CE890E32D7EF6B67C51
BF3734783960D641FD208E2F1C653843A05DCE23E9D6C1339D085BF92634D2FE
93E2E6389542AAEC2E389E9C3790ED94CB2CA47D3D24D541B30F0D5C736A0231
7C8E07C2A4258E17D65826BAB420A30ECD347E1717AA5D4CB03B26C4A34300BF
EE6476DA3E5CF4279DE37F1A0A5A6FDFD913164AD228F6DAE0FF15CFDE8CACD5
3D969020B1B90028C373D3448D4964F7E4CBE8483FF1688609F513BE2D59C7BA
143BD90E2BCFBA88DF8D87F32A7BB5B06672CAD5E073D10ECCA6A7B74C7B33F3
109B5EFF068D6189EC26A07D76118C156201A63A8D0B8B644D5701348D9D601E
A4C2A10E6D75282BD7F4E0CEABFE19A44B5B431DD849045A57D42081F87118D9
CAC94359426F03AE236B9B02B7EE66A54E31930EC84462A1C4A7008885277DF6
688E3873FBC7A49E9F84BFE9774C857619F0BD15B6667B8825B774B16809F7B2
3D88EB36BC2E699A11EC1AE28E0E6F2B3837160D5AB9AEBAD8BE7938866A90C3
6FD00BF2995BB1016F2018C6A0D378A00798C6F180EE850856252ED1F6A1B37E
D3F18D2B51861828D3586C103B347051D1B0A9117EA98C80DF80A4AADA8121BA
73EC097E978C1A3277A9E33B6810E923D7161244D70450AF16CCA79033286208
7358842F3CEE9D5D3B77B0802F7D2702DB352D0874442B2074859EB49313BFB0
3866E51975C07358392559DD3DFC68DFB13B165AD0CB2C6C5C0259E2410A72D9
50C9A90DADFDC11833C9320BE4082D8DB99454AEF0AD0088753DEB92924B8AAC
E73DD25D9E066031D4383B2202DB203886107AF158F4FC50CF5FDFE743D4CF1A
918C5F58DF1D364E29610F516544999E1D924CD89FF87DFBC5B77ED158C0EF08
2D34ECDEA8C0D51AB943797023065C805B19DBEBE4C9A81AC255E27369E505C7
9C9D23A90FB17FF1C9476D3540344F42B5FEA8CBFE1F62CADDC2C02317D26E7B
ADC9821C4E8A4DE2F56091E9837DBCBF1E55CDC265DA9BE53A8BF6B665C400F5
C62E9FC8B9E84BF464065CC9706434B12131E1B65BA9E30013A0C6F2804ABD8B
60BDF036C8391A36ABA566784EF44201DEF9D93AAEFA6B15F39ADDE2917A1024
651766240FED29CE1D728E30306429C993E179C4B767740D2728491EB31DA28E
3F6EE0A3AF558B73E93B766DCE93F62F1CF09E7CF1C96C9B9A5A18CDDF1393E4
2A2227638A0728756C84A0CDF7BEC19C4A0FCEE7B11A31738A02F8FC70BF2B2D
E4CAC816561A6DF8813483E14F001C8D333E0A57EBC25457ECBE9CC7F197265B
8161AFC52BA788EB1D9842CF48A8677CE8CE3B6E416374FD18EAF44F2A96E18C
EC081CDC4A11E710CF6697AEB592535E83B6E40A9BCF308A316B6E0C8D42E568
759DE9BD677C61140603B695065DE9BADCA559E255AAFDFC1C386F26EACD54E3
D707776ECBC2434B5E9F122F63A27B2CA03F27C68B406DC0634F2F80CC858139
F7A8119B24F316AD874A361ABD13616F45D2C9FD1B8E0695C3AA11A38C800B3E
F8B68835D429F4AB7F19B0A4833AB0EF27D0753BF8D8BA1E52241B2277DA287A
6C7C7FA786C9EB0C1F647CED0B09FAA713AF3EB130F4323A1FAC162A504F49AE
A414E23DD6AB0E92E04D40855718D3598DE7BD9B6CD0D23E1F2E45204610509B
95C60A2AD2D80D229BA32FC6A949AE21CA37E959436C8C27ECCC11217FC9EF45
92C50493B3ABABB91118F68FB977136CA795A3D89F1B62F29AD62CF60CC2399C
7D573F8A6B8CD186EA1421B4DE021C3CC7392A2A41060718870D7DC10A524EFC
704317DD7825342AE8F744081B6C4A52E09A7ABF29281AA6D679366488AC6A54
711DE2CBFE982FFC434EFB78ACB7C78089815E2A750876B2F15BEA7FB35D5A98
ADF5E2A050AFB2CDEBFBA767234BDB32482DBA8862CC8453D1DBB2C62629D2CC
3FED9C012CEF743BE11DE90ABF8B191D3EF6A66A5F4AE1CFA41C1A472FDFC060
A34F79091E373D27C026A5C68AE6D11DB9A1FC4B2FF90A022BFCB63197DEDA7D
8C23B2988462E340D2574DF4C09525CB5973054865B65C020B5CF5D60CCAC01F
31EA846AFCCBA5E8CB5EAEBE4F8F5F05EB398CA29D6F3BDB59C13C488CA65360
09A71E58E35EBD9AFAC06ABD1F5C06D375EA6DDEFF0A46A851D10950AC857784
A75D715C7C9616DED99EDC173928A21A63770B0737568D8DB5950D338E21D42D
FD654DCD2EF8F13B56C0F5FB53C291C8744E575FADAA46F8BFC80BE37AAC1076
8D6FCF6CDC988E514812D17A7AD84FCFF3BBEE996F5737A42D10B1E574809934
F7F491C69B2E4458B1CFD6D9D051BF5083305992A8D0828B19A1D57D2238D0B2
95BE2561970E0D7CAD6F790396CF05EAF5B30AA7DBDC0ACB5C96CFA00AF854DB
015C7D7D783AA48744B55B86152D796A5679998E084379273351F709E6063A05
BB811C293ECCB0F07B8E83D1C72FCFDD64677B99E9F6A4F26668321136AB5F00
5E2E8B8A92B4737B2E3D382EFF65B65CD977169519E8A0D81969BB7B6E75FEA3
A2281B3DEF5B00FC38604A4BCB983B77AE3B7B69E9EE402AC2178EB9ACB0DEB3
FCDEABE73F53BF4F8E3A0A7EEB92C2B45005CEBF552D97CBCEA2B828E6F5F901
2EEC854735CB9E4B1FDE8CE1FC71F12F68AE8E720EDE67588BD4E50B42550E8A
3A3F0F773B42B1EF90CE0F219F1889FB369DDC5C2B0DC3793F07D21F9D1B0B44
066225BEA4DF2ECC37C3BD0E88D5491E09F2C04C9E99CF15F03147C1751F02CF
950582EAFD0E0D300BA35E3BCAA44FBCEC72E8DDF28B38AE222BA566DFC5676A
87BAF0AB99C24354DDCE81C2AA40528D00CBD9EF61BAD8DE2B1AD0B398CC126B
7E8BE0FFABC0A6906BF8598C988EC66C6D4F445504B3CC39DA6270DF3C88095F
19F11F5547C78B318EA8CE044D24E449F12C8E4EF5C776C43B1615BE01C56D12
8AF16A7F159D1B1CD60F557B617EDD7C0EB38882DB22333D8370B859264F5137
395DE4CFF34EE9369AAFE47CE80510D5A89BB95A19EA41FAC8D9B6EB3FC8B4E6
976C33C41078B9DB2A644264E51CBFF1600B64B89412C6B8187146F5EB94734B
78B47748CD77D4BAB1E9A7355D15A66E742C5DB420E691CB413C708491C4C09B
A6587937D6CB7950F299CCF5959E880444A85C7BAD023365E6FC8E5249127FD8
D6D66AF57344A82B622327EA307C852ABDEFE425CDE70BAF4BB30B5E4F30C220
00CE081D4F332FE1E3FC91864C1165C71DBCF653F77694485E870262A15952CD
8AB6913B7C7869CF39082D4A3D224BE5740EB85262077279BE6E33C1D4684EDF
609851E96134C901AC5F8ADB0104A2A0449CB4B14728294832DCBDE15C95369D
72F5F49EBCD0139703024AFCEF820D3C23B44068CC2A746111399D8B2697DCCC
5DBCCFD1115C34F5750FE14D3F745BAC7C3517E9CF6981E05E6F55CAB4122DA1
F900B5FD0E36871EF89008148EAC91F6BD29942858E4191183A37A02F9BE4F8F
3810DD2614923C07007FDCC189EB89E632E0912EA46283C0322425FAF8C79CC0
560F2E91EA7187DEC15CC897C5F041B1E824E4AAD995259460CBC037E6E49FD9
8B8EE513F2957B37782B74497CF6084EB50402A93CFD6F066AC5703CD9EE0725
459CDD926202FE4392CBB72B4ABA85AC75B23CA7B682EF11E4E15F8693E71BDB
4F462915DC3066E340158F746962C24D2178FD92165D113B9DDCC3E839182E09
6172494C3F9797F8CC4098D3A6B97A91EB5B8F0E20A4FDFB42CC91D17AB25137
568B656D6F1B1F9640335736944CB83199F9A785F8845B6059384976FD9EAAE5
2C9CA261C14B803F9820915A303A0C2353804A8769F253EDF701BB4C21C8C566
F95898A555DD31B1D6BEC958439CEBD46BCEF5061B5E2C4645486A47C2FEC766
938C993DB8F593348E8CA988354F999D0B5195716986CB63BE76EA80AE2C9F70
56DF55F80AB32C82C0E35CF07C4F6A625FBF2F6A4DEF62C0120D6448ECB0FBA3
0331CB715EDAC6014A626AE478D7DEDFFDD284830F13B264120B98F8A9B64747
9FEB29B7F6287257880817235FDBBD38041164EB6C4340705C7E38224B91A55E
67E58A6601A919E17D11DB11847700BADD9E80C1AB73D11EC2AA4F4AFDE9C93E
E607D76CF7A2AF9DA260D63D7C36A0B32FF9DB2378E8C6433A30B98C5233D21D
2942D623128FB950D614D13E90D03302AC7D11BD190F34F8E89269561B6EB112
3A8F5F95AB119AF04A7B8EC445B77A3171E281BBE9B07D275E0FABDBEC43BAFB
79E7DAD2097171ACAB34EC03A6F944F99F190C58308B11A453F365CD1987F999
41A84F1B615B8C2F425C22F6DC18C28DADFBB46AA0A954760E11EEEE5CC07CD3
13A25F3AF2681E697FBF331ECDFC750ACB5D3CB3F6198B54590BC841061759AC
FAE6C1304B230049481B30BE6B272496AFF7EA6C42764D2CFB6E241E36AA05F6
2278E9EAA72AC8B07BF2D9CC72C80BB7255A8B5B400E43B40F46E508DC7E2857
3ADE5CCF584206F269EBB62B5B727C0B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 26698704 20573749 1000 600 600
(C:\Users\syjintw\.matplotlib\tex.cache\0751212eddd773f45a13d2d97e6340bf.dvi)
@start /Fb 147[46 6[74 2[83 74 7[120 120 11[101 6[101
120 111 111 120 13[83 83 83 83 48[{ TeXBase1Encoding ReEncodeFont }16
166.044 /NimbusRomNo9L-Regu rf /Fc 139[23 32 28 1[42
1[42 65 23 4[42 28 37 1[37 1[37 13[46 2[46 80[{
 TeXBase1Encoding ReEncodeFont }14 83.022 /NimbusRomNo9L-Regu
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
% dvips-unknown
statusdict /setpageparams known { hsize vsize 0 1 statusdict begin {
setpageparams } stopped end } { true } ifelse { statusdict /setpage known
{ hsize vsize 1 statusdict begin { setpage } stopped pop end } if } if
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop Black Black Black -600 2006 a
 gsave currentpoint currentpoint translate 0 neg rotate neg exch neg
exch translate
 -600
2006 a -600 2006 a
 /PSfrag where{pop(psmarker0)[[0(bl)1 0.000000]](psmarker1)[[1(bl)1
0.000000]](psmarker2)[[2(bl)1 0.000000]](psmarker3)[[3(bl)1 0.000000]](psmarker4)[[4(bl)1
0.000000]](psmarker5)[[5(bl)1 0.000000]](psmarker6)[[6(bl)1 0.000000]](psmarker7)[[7(bl)1
0.000000]](psmarker8)[[8(bl)1 0.000000]](psmarker9)[[9(bl)1 0.000000]](psmarker10)[[10(bl)1
90.000000]]11 0 -1/Begin PSfrag}{userdict /PSfrag{pop}put}ifelse
 -600 2006 a @beginspecial 0 @llx 0
@lly 405.868103 @urx 312.757629 @ury 4058 @rwi @clip
@setspecial
%%BeginDocument: C:/Users/syjintw/AppData/Local/Temp/tmpst7hz77j/tmp.ps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: figs/without_hue_value1.eps
%%Creator: matplotlib version 3.3.4, http://matplotlib.org/
%%CreationDate: Fri Apr 21 11:46:15 2023
%%BoundingBox: 0 0 405.86809308841845 312.7576257783313
%%EndComments
%%BeginProlog
/mpldict 7 dict def
mpldict begin
/m { moveto } bind def/l { lineto } bind def/r { rlineto } bind def/c { curveto } bind def/cl { closepath } bind def/box {
      m
      1 index 0 r
      0 exch r
      neg 0 r
      cl
    } bind def/clipbox {
      box
      clip
      newpath
    } bind def
end
%%EndProlog
mpldict begin
0 0 translate
405.868 312.758 0 0 clipbox
gsave
0 0 m
405.868093 0 l
405.868093 312.757626 l
0 312.757626 l
cl
1.000 setgray
fill
grestore
gsave
48.748093 46.645626 m
405.868093 46.645626 l
405.868093 312.757626 l
48.748093 312.757626 l
cl
1.000 setgray
fill
grestore
gsave
357.1 266.1 48.75 46.65 clipbox
64.98082 46.645626 m
111.360041 46.645626 l
111.360041 279.706295 l
64.98082 279.706295 l
cl
0.122 0.467 0.706 setrgbcolor
fill
grestore
gsave
357.1 266.1 48.75 46.65 clipbox
134.549652 46.645626 m
180.928872 46.645626 l
180.928872 254.989005 l
134.549652 254.989005 l
cl
0.122 0.467 0.706 setrgbcolor
fill
grestore
gsave
357.1 266.1 48.75 46.65 clipbox
204.118483 46.645626 m
250.497703 46.645626 l
250.497703 270.771329 l
204.118483 270.771329 l
cl
0.122 0.467 0.706 setrgbcolor
fill
grestore
gsave
357.1 266.1 48.75 46.65 clipbox
273.687314 46.645626 m
320.066535 46.645626 l
320.066535 266.596111 l
273.687314 266.596111 l
cl
0.122 0.467 0.706 setrgbcolor
fill
grestore
gsave
357.1 266.1 48.75 46.65 clipbox
343.256145 46.645626 m
389.635366 46.645626 l
389.635366 252.734387 l
343.256145 252.734387 l
cl
0.122 0.467 0.706 setrgbcolor
fill
grestore
0.800 setlinewidth
1 setlinejoin
0 setlinecap
[] 0 setdash
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin
0 setlinecap
0 0 m
0 -3.5 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
88.1704 46.6456 o
grestore
gsave
80.977 26.136 moveto
(psmarker0)
show
grestore
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin
0 setlinecap
0 0 m
0 -3.5 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
157.739 46.6456 o
grestore
gsave
151.094 26.136 moveto
(psmarker1)
show
grestore
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin
0 setlinecap
0 0 m
0 -3.5 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
227.308 46.6456 o
grestore
gsave
220.663 25.997 moveto
(psmarker2)
show
grestore
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin
0 setlinecap
0 0 m
0 -3.5 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
296.877 46.6456 o
grestore
gsave
289.684 26.136 moveto
(psmarker3)
show
grestore
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin
0 setlinecap
0 0 m
0 -3.5 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
366.446 46.6456 o
grestore
gsave
360.359 26.136 moveto
(psmarker4)
show
grestore
gsave
194.94 4.174 moveto
(psmarker5)
show
grestore
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin
0 setlinecap
-0 0 m
-3.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
48.7481 46.6456 o
grestore
gsave
31.785 39.752 moveto
(psmarker6)
show
grestore
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin
0 setlinecap
-0 0 m
-3.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
48.7481 130.15 o
grestore
gsave
21.823 123.256 moveto
(psmarker7)
show
grestore
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin
0 setlinecap
-0 0 m
-3.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
48.7481 213.654 o
grestore
gsave
21.823 206.76 moveto
(psmarker8)
show
grestore
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin
0 setlinecap
-0 0 m
-3.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
48.7481 297.159 o
grestore
gsave
21.823 290.265 moveto
(psmarker9)
show
grestore
gsave
13.509 147.194 moveto
(psmarker10)
show
grestore
1.500 setlinewidth
0.227 setgray
gsave
357.1 266.1 48.75 46.65 clipbox
88.170431 259.326965 m
88.170431 300.085626 l
stroke
grestore
gsave
357.1 266.1 48.75 46.65 clipbox
157.739262 233.973583 m
157.739262 276.004427 l
stroke
grestore
gsave
357.1 266.1 48.75 46.65 clipbox
227.308093 250.412688 m
227.308093 291.12997 l
stroke
grestore
gsave
357.1 266.1 48.75 46.65 clipbox
296.876924 246.469025 m
296.876924 286.723197 l
stroke
grestore
gsave
357.1 266.1 48.75 46.65 clipbox
366.445755 233.485991 m
366.445755 271.982783 l
stroke
grestore
gsave
357.1 266.1 48.75 46.65 clipbox
/o {
gsave
newpath
translate
1.5 setlinewidth
1 setlinejoin
0 setlinecap
4 -0 m
-4 0 l

gsave
0.227 setgray
fill
grestore
stroke
grestore
} bind def
88.1704 259.327 o
157.739 233.974 o
227.308 250.413 o
296.877 246.469 o
366.446 233.486 o
grestore
gsave
357.1 266.1 48.75 46.65 clipbox
/o {
gsave
newpath
translate
1.5 setlinewidth
1 setlinejoin
0 setlinecap
4 -0 m
-4 0 l

gsave
0.227 setgray
fill
grestore
stroke
grestore
} bind def
88.1704 300.086 o
157.739 276.004 o
227.308 291.13 o
296.877 286.723 o
366.446 271.983 o
grestore
0.800 setlinewidth
0 setlinejoin
2 setlinecap
0.000 setgray
gsave
48.748093 46.645626 m
48.748093 312.757626 l
stroke
grestore
gsave
405.868093 46.645626 m
405.868093 312.757626 l
stroke
grestore
gsave
48.748093 46.645626 m
405.868093 46.645626 l
stroke
grestore
gsave
48.748093 312.757626 m
405.868093 312.757626 l
stroke
grestore

end
showpage

%%EndDocument
 @endspecial -600 2006 a
 /End PSfrag
 -600 2006 a -600 580 a
 /Hide PSfrag
 -600
580 a -1285 636 a Fc(PSfrag)20 b(replacements)p -1285
668 685 4 v -600 671 a
 /Unhide PSfrag
 -600 671 a -720 790 a
  {
 -720 790
a Black 0.000 0.000 0.000 TeXcolorrgb Fb(A)p Black Black
-720 790 a
  } 0/Place PSfrag
 -720 790 a -711 909 a
  {
 -711 909 a Black 0.000 0.000 0.000
TeXcolorrgb Fb(B)p Black Black -711 909 a
  } 1/Place PSfrag
 -711 909 a
-711 1033 a
  {
 -711 1033 a Black 0.000 0.000 0.000 TeXcolorrgb
-2 x Fb(C)p Black Black -711 1033 a
  } 2/Place PSfrag
 -711 1033 a -720
1152 a
  {
 -720 1152 a Black 0.000 0.000 0.000 TeXcolorrgb
Fb(D)p Black Black -720 1152 a
  } 3/Place PSfrag
 -720 1152 a -701 1272
a
  {
 -701 1272 a Black 0.000 0.000 0.000 TeXcolorrgb Fb(E)p
Black Black -701 1272 a
  } 4/Place PSfrag
 -701 1272 a -1139 1395 a
  {
 -1139
1395 a Black 0.000 0.000 0.000 TeXcolorrgb -2 x Fb(X)41
b(Label)p Black Black -1139 1395 a
  } 5/Place PSfrag
 -1139 1395 a -683
1517 a
  {
 -683 1517 a Black 0.000 0.000 0.000 TeXcolorrgb
-3 x Fb(0)p Black Black -683 1517 a
  } 6/Place PSfrag
 -683 1517 a -766
1639 a
  {
 -766 1639 a Black 0.000 0.000 0.000 TeXcolorrgb
-3 x Fb(10)p Black Black -766 1639 a
  } 7/Place PSfrag
 -766 1639 a -766
1761 a
  {
 -766 1761 a Black 0.000 0.000 0.000 TeXcolorrgb
-3 x Fb(20)p Black Black -766 1761 a
  } 8/Place PSfrag
 -766 1761 a -766
1883 a
  {
 -766 1883 a Black 0.000 0.000 0.000 TeXcolorrgb
-3 x Fb(30)p Black Black -766 1883 a
  } 9/Place PSfrag
 -766 1883 a -1139
2006 a
  {
 -1139 2006 a Black 0.000 0.000 0.000 TeXcolorrgb
-2 x Fb(Y)g(Label)p Black Black -1139 2006 a
  } 10/Place PSfrag
 -1139 2006
a 2782 2006 a
 currentpoint grestore moveto
 2782 2006 a Black Black Black eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
